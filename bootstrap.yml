---
- name: Bootstrap server (based on 5 minutes on a server)
  hosts: node-servers
  become: yes
  become_user: root
  gather_facts: false
  vars_files:
    - vars.yml

  pre_tasks:
    - name: 'install python2'
      raw: apt-get -y install python-simplejson

  tasks:
    - name: Update APT packages cache
      raw: apt-get update -qq

    - name: Perform aptitude safe-upgrade
      raw: apt-get upgrade -y

    - name: Create new user
      user: name={{ server_user_name }} password={{ server_user_password }} shell=/bin/bash

    - name: Add user to sudoers
      lineinfile: dest=/etc/sudoers
                  regexp="{{ server_user_name }} ALL"
                  line="{{ server_user_name }} ALL=(ALL:ALL) ALL"
                  state=present

    - name: Add authorized_keys for the user
      authorized_key: user={{ server_user_name }} key="{{ item.key }}"
      with_items:
        - "{{ user_public_keys }}"

    - name: Disallow root SSH access
      action: lineinfile dest=/etc/ssh/sshd_config regexp="^PermitRootLogin" line="PermitRootLogin no" state=present
      notify: Restart ssh

    - name: Disallow password authentication
      action: lineinfile dest=/etc/ssh/sshd_config regexp="^PasswordAuthentication" line="PasswordAuthentication no" state=present
      notify: Restart ssh

    - name: Install required packages
      apt: state=installed pkg={{ item }}
      with_items: 
      - "{{ required_packages }}"

    - name: Allow ssh and http(s) connections
      ufw: rule=allow port={{ item }}
      with_items:
        - "{{ ufw_allowed_ports }}"

    - name: Enable ufw/firewall
      ufw: state=enabled policy=deny

    - name: Set up Postfix to relay mail
      debconf: name=postfix
               question='{{ item.question }}'
               value='{{ item.value }}'
               vtype='{{ item.vtype }}'
      with_items:
        - { question: 'postfix/mailname', value: 'feature-deployment', vtype: 'string' }
        - { question: 'postfix/main_mailer_type', value: 'feature', vtype: 'string' }

    - name: Email logwatch summary daily
      lineinfile: dest=/etc/cron.daily/00logwatch
                  regexp="^/usr/sbin/logwatch"
                  line="/usr/sbin/logwatch --output mail --mailto {{ logwatch_email }} --detail high"
                  state=present create=yes

    - name: Ensure apt-transport-https is installed.
      apt: name=apt-transport-https state=present

  roles:
     - { role: nodesource.node, nodejs_version: "6", debian_repo_version: "6.x", ansible_distribution_release: "trusty" }

  handlers:
    - name: Restart ssh
      service: name=ssh state=restarted
